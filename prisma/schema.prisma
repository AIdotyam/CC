// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Farmer {
  uid            String          @id @db.VarChar(256)
  email          String          @unique @db.VarChar(256)
  name           String          @db.VarChar(256)
  targetAlert    TargetAlert?
  captureResults CaptureResult[]
  historyAlerts  HistoryAlert[]

  @@map("farmers")
}

model TargetAlert {
  id          Int     @id @default(autoincrement())
  phoneNumber String? @map("phone_number") @db.VarChar(20)
  fcm         String? @db.VarChar(512)
  iot         String? @db.VarChar(512)
  farmerUid   String  @unique @map("farmer_uid") @db.VarChar(256)
  farmer      Farmer  @relation(fields: [farmerUid], references: [uid])

  @@map("target_alerts")
}

model CaptureResult {
  id           Int           @id @default(autoincrement())
  deadChicken  Boolean       @map("dead_chicken")
  createdAt    DateTime      @map("created_at")
  mediaUrl     String        @map("media_url") @db.VarChar(256)
  isAlert      Boolean       @map("is_alert")
  farmerUid    String        @map("farmer_uid") @db.VarChar(256)
  farmer       Farmer        @relation(fields: [farmerUid], references: [uid])
  historyAlert HistoryAlert?

  @@map("capture_results")
}

model HistoryAlert {
  id              Int           @id @default(autoincrement())
  isRead          Boolean       @map("is_read")
  farmerUid       String        @map("farmer_uid") @db.VarChar(256)
  captureResultId Int           @unique @map("capture_result_id")
  farmer          Farmer        @relation(fields: [farmerUid], references: [uid])
  captureResult   CaptureResult @relation(fields: [captureResultId], references: [id])

  @@map("history_alerts")
}
